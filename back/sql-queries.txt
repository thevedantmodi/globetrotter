CREATE TYPE port_size as ENUM('small', 'medium', 'large');
CREATE TABLE IF NOT EXISTS airports (
    iata VARCHAR(3) PRIMARY KEY,
    lat REAL,
    lon REAL,
    country VARCHAR(2) REFERENCES countries(id),
    icao VARCHAR(4),
    tz VARCHAR(30) REFERENCES timezones(id),
    city VARCHAR(500),
    subd VARCHAR(500),
    size port_size
);

\COPY airports FROM
/Users/vedantmodi/dev-work/closed-flights/data-treatment/airports-mongo.csv
DELIMITER ',' CSV header;

CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    hashed_pwd VARCHAR(255) NOT NULL,
    hometown VARCHAR(255),
    km_flown INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS users (
    id BIGSERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    hashed_pwd VARCHAR(255) NOT NULL,
    hometown VARCHAR(255),
    km_flown INT DEFAULT 0
);

INSERT INTO users (email, hashed_pwd, hometown, km_flown) 
VALUES ('vedantmodi@gmail.com', 'ersgrsegdfshgsrysdg', 'Houston, TX', 1500)

CREATE TABLE IF NOT EXISTS flights (
    id BIGSERIAL PRIMARY KEY,
    dept_datetime TIMESTAMPTZ
);

INSERT INTO flights (dept_datetime)
VALUES ('2003-04-12 04:05:06 America/New_York')
RETURNING *;

CREATE TABLE IF NOT EXISTS flights (
    id BIGSERIAL PRIMARY KEY,
    carrier VARCHAR(2),
    fl_no SMALLINT,

    dep_port VARCHAR(3),
    dep_date TIMESTAMPTZ,

    arr_port VARCHAR(3),
    arr_date TIMESTAMPTZ,

    price MONEY,
    currency VARCHAR(3),

    duration INTERVAL HOUR TO MINUTE
);

SELECT * FROM flights

INSERT INTO flights (
        carrier,
        fl_no,
        dep_port,
        dep_date,
        arr_port,
        arr_date,
        price,
        currency,
        duration
    )
VALUES (
        'AA',
        850,
        'MIA',
        '2024-08-20 18:56 America/New_York',
        'KIN',
        '2024-08-20 19:46 America/Jamaica',
        '123.40',
        'USD',
        '1 hour 50 minutes'
    )
RETURNING *;


ALTER TABLE flights ADD COLUMN passenger_id BIGINT;
ALTER TABLE flights ADD FOREIGN KEY (passenger_id) REFERENCES users(id);


UPDATE flights
SET duration = arr_date - dep_date;
WHERE duration = NULL

CREATE FUNCTION HaversineDistance(
    lat1 FLOAT, lon1 FLOAT,
    lat2 FLOAT, lon2 FLOAT
) RETURNS FLOAT
BEGIN
    DECLARE R FLOAT DEFAULT 6371; -- Earth radius in kilometers

    DECLARE dlat FLOAT;
    DECLARE dlon FLOAT;
    DECLARE a FLOAT;
    DECLARE c FLOAT;
    DECLARE distance FLOAT;

    SET dlat = RADIANS(lat2 - lat1);
    SET dlon = RADIANS(lon2 - lon1);

    SET a = SIN(dlat / 2) * SIN(dlat / 2) +
            COS(RADIANS(lat1)) * COS(RADIANS(lat2)) *
            SIN(dlon / 2) * SIN(dlon / 2);

    SET c = 2 * ATAN2(SQRT(a), SQRT(1 - a));

    SET distance = R * c;

    RETURN distance;
END;